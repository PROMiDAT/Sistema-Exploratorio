),
div(
id = "sections-container",
`data-columns` = NA,
div(
class = "section",
div(class = "title", "Simple"),
div(class = "output", "Selected colour:",
textOutput("valueSimple", inline = TRUE)),
colourInput("colSimple", NULL, "blue"),
tags$pre('colourInput("col", NULL, "blue")')
),
div(
class = "section",
div(class = "title", "Limited colour palette"),
div(class = "output", "Selected colour:",
textOutput("valueLimited", inline = TRUE)),
colourInput("colLimited", NULL, "yellow", palette = "limited"),
tags$pre(HTML(paste0(
'colourInput(<br>',
'  "col", NULL, "yellow",<br>',
'  palette = "limited")'
)))
),
div(
class = "section",
div(class = "title", "Allow Transparent"),
div(class = "output", "Selected colour:",
textOutput("valueTransparent", inline = TRUE)),
colourInput("colTransparent", NULL, "#00FF0080", allowTransparent = TRUE),
tags$pre(HTML(paste0(
'colourInput(<br>',
'  "col", NULL, "#00FF0080",<br>',
'  allowTransparent = TRUE)'
)))
),
div(
class = "section",
div(class = "title", "Return colour name"),
div(class = "output", "Selected colour:",
textOutput("valueName", inline = TRUE)),
colourInput("colName", NULL, "green", returnName = TRUE, palette = "limited"),
tags$pre(HTML(paste0(
'colourInput(<br>',
'  "col", NULL, "green",<br>',
'  returnName = TRUE, <br>',
'  palette = "limited")'
)))
),
div(
class = "section",
div(class = "title", "Background only"),
div(class = "output", "Selected colour:",
textOutput("valueBg", inline = TRUE)),
colourInput("colBg", NULL, "red", showColour = "background"),
tags$pre(HTML(paste0(
'colourInput(<br>',
'  "col", NULL, "red",<br>',
'  showColour = "background")'
)))
),
div(
class = "section",
div(class = "title", "Custom colour list"),
div(class = "output", "Selected colour:",
textOutput("valueCustom", inline = TRUE)),
colourInput("colCustom", NULL, palette = "limited",
allowedCols = c("white", "black", "red", "#DDD",
"blue", "#0000FFA0", "#0000FF30", "rgb(255, 255, 0)")),
tags$pre(HTML(paste0(
'colourInput(<br>',
'  "col", NULL,<br>',
'  palette = "limited",<br>',
'  allowedCols = c(<br>',
'    "white", "black", "red",<br>',
'    "#DDD", "blue",<br>',
'    "#0000FFA0", "#0000FF30",<br>',
'    "rgb(255, 255, 0)"'
)))
),
div(
class = "section",
div(class = "title", "Update input control"),
div(class = "output", "Selected colour:",
textOutput("valueUpdate", inline = TRUE)),
colourInput("colUpdate", NULL, "brown"),
tags$hr(),
textInput("text", "New colour: (colour name or HEX value)", "brown"),
selectInput("showColour", "Show colour",
c("both", "text", "background")),
shiny::selectInput("palette", "Colour palette",
c("square", "limited")),
checkboxInput("allowTransparent", "Allow transparent", FALSE),
checkboxInput("returnName", "Return R colour name", FALSE),
actionButton("update", "Update")
),
div(
class = "section",
div(class = "title", "Use output in a plot"),
colourInput("colPlotFill", "Points colour", "purple", allowTransparent = TRUE),
colourInput("colPlotOutline", "Points outline", "black", allowTransparent = TRUE),
plotOutput("plot")
)
),
includeScript(file.path("www", "salvattore.min.js"))
),
server = function(input, output, session) {
# show the selected colours
output$valueSimple      <- renderText(input$colSimple)
output$valueBg          <- renderText(input$colBg)
output$valueTransparent <- renderText(input$colTransparent)
output$valueUpdate      <- renderText(input$colUpdate)
output$valueLimited     <- renderText(input$colLimited)
output$valueName        <- renderText(input$colName)
output$valueCustom      <- renderText(input$colCustom)
# allow user to update an input control
observeEvent(input$update, {
updateColourInput(session, "colUpdate",
value = input$text, showColour = input$showColour,
palette = input$palette,
allowTransparent = input$allowTransparent,
returnName = input$returnName)
})
# show plot based on colours selected
output$plot <- renderPlot({
par('bg' = '#EEEEEE');
plot(cars, pch = 22, cex = 1.5,
col = input$colPlotOutline,
bg = input$colPlotFill)
})
}
)
runApp()
install.packages()
install.packages("shinyjs")
install.packages("shinyjs")
shiny::runApp()
runApp()
runApp()
library(colourpicker)
colourInput()
colourpicker::colourInput()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
datos <- read.table(file = "/Users/promidat05/Downloads/DatosClaseTarea/OIJ_estadisticas_2015.csv", sep = ";", dec = ",", header = T)
datos
datos <- read.table(file = "/Users/promidat05/Downloads/DatosClaseTarea/OIJ_estadisticas_2015.csv", sep = ",", dec = ".", header = T)
datos
ggplot(data = subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO"), mapping = aes(fct_reorder(Canton,Delito), Delito)) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
library(forcats)
ggplot(data = subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO"), mapping = aes(fct_reorder(Canton,Delito), Delito)) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO")
ggplot(data = subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO")) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
ggplot(data = subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO"), mapping = aes(fct_reorder(Canton, datos %>% count(Delito)), datos %>% count(Delito))) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
library(dplyr)
ggplot(data = subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO"), mapping = aes(fct_reorder(Canton, datos %>% count(Delito)), datos %>% count(Delito))) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
datos %>% count(Delito)
datos %>% count(Delito)
ggplot(data = subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO"), mapping = aes(fct_reorder(Canton, datos %>% count(Delito)), datos %>% count(Delito))) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
datos %>% count(Delito)[1]
datos %>% count(Delito)[2]
aux <- datos %>% count(Delito)
aux
aux$n
datos %>% count(Delito)$n
datos %>% count(Delito)["n"]
datos %>% count(Delito)
ggplot(data = subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO"), mapping = aes(x = Canton, y = Delito) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
)
ggplot(data = subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO"), mapping = aes(x = Canton, y = Delito)) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
ggplot(data = subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO"), mapping = aes(x = fct_reorder(Canton,Delito), y = Delito)) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
ggplot(data = subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO"), mapping = aes(x = Canton, y = Delito)) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
ggplot(data = subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO"), mapping = aes(x = fct_reorder(Delito), y = Delito)) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
ggplot(data = subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO"), mapping = aes(x = fct_reorder(Canton,Delito), y = Delito)) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
ggplot(data = subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO"), mapping = aes(x = fct_reorder(Canton,Delito), y = Delito)) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
ggplot(data = subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO"), mapping = aes(x = Canton, y = Delito)) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
datos$Delito
ggplot(data = subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO"), mapping = aes(x = Canton, y = Delito)) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
ggplot(data = subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO"), mapping = aes(x = fct_reorder2(Canton), y = Delito)) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
ggplot(data = subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO"), mapping = aes(x = fct_reorder2(Canton, Delito), y = Delito)) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
ggplot(data = subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO"), mapping = aes(x = fct_reorder(Canton, Delito), y = Delito)) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
ggplot(data = subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO"), mapping = aes(x = fct_reorder(Canton, Delito), y = Delito)) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
ggplot(data = subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO"), mapping = aes(x = Canton, y = Delito)) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
ggplot(data = subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO"), mapping = aes(x = reorder(Canton, -Delito), y = Delito)) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
ggplot(data = subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO"), mapping = aes(x = reorder(Canton, Delito), y = Delito)) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
warnings()
ggplot(data = subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO"), mapping = aes(x = reorder(Canton, count(Delito)), y = Delito)) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
datos %>% count(Delito)
datos %>% count(Canton,Delito)
datos %>% select(Provincia == "SAN JOSE") %>% count(Canton, Delito)
datos %>% select(Provincia == "SAN JOSE") %>% count(Canton, Delito)
datos$Provincia
datos %>% select(Provincia == "SAN JOSE")
datos %>% select(datos$Provincia == "SAN JOSE") %>% count(Canton, Delito)
datos %>% select(datos, Provincia == "SAN JOSE") %>% count(Canton, Delito)
datos %>% select(Provincia) %>% count(Canton, Delito)
datos %>% select(Provincia, Canton) %>% count(Canton, Delito)
datos %>% select(Provincia, Canton, Delito) %>% count(Canton, Delito)
datos %>% filter(Provincia == "SAN JOSE") %>% count(Canton, Delito)
datos %>% filter(Provincia == "SAN JOSE") %>% filter(Delito == "ASALTO") %>% count(Canton, Delito)
aux <- datos %>% filter(Provincia == "SAN JOSE") %>% filter(Delito == "ASALTO") %>% count(Canton, Delito)
ggplot(aux, mapping = aes(x = reorder(Canton, n), y = n)) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
ggplot(data = subset(OIJ_Totales, Provincia == "SAN JOSE" & Delito == "ASALTO"), mapping = aes(Canto, Delito)) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
ggplot(data = subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO"), mapping = aes(Canto, Delito)) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
ggplot(data = subset(datos, Provincia == "SAN JOSE" & Delito == "ASALTO"), mapping = aes(Canton, Delito)) +
geom_col() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")+
coord_flip() +
theme_minimal()
colourpicker:::colourPickerAddin()
colourpicker:::colourPickerAddin()
aux <- datos %>% filter(Provincia == "SAN JOSE") %>% filter(Delito == "ASALTO") %>% count(Canton, Delito)
library(dplyr)
datos <- read.table(file = "/Users/promidat05/Downloads/DatosClaseTarea/OIJ_estadisticas_2015.csv", sep = ",", dec = ".", header = T)
aux <- datos %>% filter(Provincia == "SAN JOSE") %>% filter(Delito == "ASALTO") %>% count(Canton, Delito)
delitos.x.canton <- datos %>% filter(Provincia == "SAN JOSE") %>% filter(Delito == "ASALTO") %>% count(Canton, Delito)
ggplot(data = delitos.x.canton, mapping = aes(fct_reorder(Canton, n), n)) +
geom_col() + coord_flip() + theme_minimal() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")
library(ggplot2)
datos <- read.table(file = "/Users/promidat05/Downloads/DatosClaseTarea/OIJ_estadisticas_2015.csv", sep = ",", dec = ".", header = T)
delitos.x.canton <- datos %>% filter(Provincia == "SAN JOSE") %>% filter(Delito == "ASALTO") %>% count(Canton, Delito)
ggplot(data = delitos.x.canton, mapping = aes(fct_reorder(Canton, n), n)) +
geom_col() + coord_flip() + theme_minimal() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")
library(forcats)
datos <- read.table(file = "/Users/promidat05/Downloads/DatosClaseTarea/OIJ_estadisticas_2015.csv", sep = ",", dec = ".", header = T)
delitos.x.canton <- datos %>% filter(Provincia == "SAN JOSE") %>% filter(Delito == "ASALTO") %>% count(Canton, Delito)
ggplot(data = delitos.x.canton, mapping = aes(fct_reorder(Canton, n), n)) +
geom_col() + coord_flip() + theme_minimal() +
labs(title = "Asalto por Cantos para la Provincia de San Jose", x = "Cantones", y = "Cantidad de Asaltos")
ymd
library(lubridate)
ymd(datos$Fecha)
aux <- ymd(datos$Fecha)
aux
year(aux)
month(aux)
datos$Fecha <- ymd(datos$Fecha)
delitos.x.mes <- datos %>% filter(Delito == "ASALTO") %>% count(month(datos$Fecha), Delito)
delitos.x.mes
lubridate::month(aux, label = T)
lubridate::month(aux, label = T, abbr = F)
lubridate::month(aux, label = T, abbr = F, locale = Sys.setlocale("LC_ALL","English"))
lubridate::month(aux, label = T, abbr = F, locale = Sys.setlocale("LC_ALL","English"))
lubridate::month(aux, label = T, abbr = F)
Sys.getlocale("LC_TIME")
delitos.x.mes
datos$Fecha <- ymd(datos$Fecha)
delitos.x.mes
colnames(delitos.x.mes)
colnames(delitos.x.mes)[1] <- "Mes"
delitos.x.mes
delitos.x.mes$Mes <- c("Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Setiembre", "Octubre", "Noviembre", "Diciembre")
delitos.x.mes
ggplot(data = delitos.x.mes, aes(Mes, n))
ggplot(data = delitos.x.mes, aes(Mes, n)) + geom_line()
ggplot(data = delitos.x.mes) + geom_line(aes(Mes, n))
ggplot() + geom_line(data = delitos.x.mes, aes(Mes, n))
ggplot(data = delitos.x.mes, aes(Mes, n)) + geom_bar()
ggplot(data = delitos.x.mes, mapping = aes(Mes, n)) + geom_bar()
ggplot(delitos.x.mes, aes(x = Mes, y = n))
ggplot(delitos.x.mes, aes(x = Mes, y = n)) + geom_point()
ggplot(delitos.x.mes, aes(x = Mes, y = n)) + geom_bar()
ggplot(delitos.x.mes, aes(x = Mes, y = n)) + geom_point()
ggplot(delitos.x.mes, aes(x = Mes, y = n)) + geom_point() + geom_line()
ggplot(delitos.x.mes, aes(x = Mes, y = n)) + geom_point() + geom_line(delitos.x.mes, aes(x = Mes, y = n))
ggplot(delitos.x.mes, aes(x = Mes, y = n, group = 1)) + geom_point() + geom_line()
delitos.x.mes$Mes
factor(delitos.x.mes$Mes)
factor(delitos.x.mes$Mes, levels = meses, ordered = T)
meses <- c("Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Setiembre", "Octubre", "Noviembre", "Diciembre")
factor(delitos.x.mes$Mes, levels = meses, ordered = T)
meses <- c("Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Setiembre", "Octubre", "Noviembre", "Diciembre")
delitos.x.mes$Mes <- meses
delitos.x.mes
ggplot(delitos.x.mes, aes(x = Mes, y = n, group = 1)) + geom_point() + geom_line()
datos$Fecha <- ymd(datos$Fecha)
delitos.x.mes <- datos %>% filter(Delito == "ASALTO") %>% count(month(datos$Fecha), Delito)
colnames(delitos.x.mes)[1] <- "Mes"
meses <- c("Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Setiembre", "Octubre", "Noviembre", "Diciembre")
delitos.x.mes$Mes <- factor(delitos.x.mes$Mes, levels = meses, ordered = T)
delitos.x.mes
datos$Fecha <- ymd(datos$Fecha)
delitos.x.mes <- datos %>% filter(Delito == "ASALTO") %>% count(month(datos$Fecha), Delito)
colnames(delitos.x.mes)[1] <- "Mes"
meses <- c("Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Setiembre", "Octubre", "Noviembre", "Diciembre")
delitos.x.mes$Mes <- factor(meses, levels = meses, ordered = T)
delitos.x.mes
ggplot(delitos.x.mes, aes(x = Mes, y = n, group = 1)) + geom_point() + geom_line()
ggplot(delitos.x.mes, aes(x = Mes, y = n, group = 1)) +
geom_point() + geom_line() + theme_minimal() +
labs(y = "Cantidad de Asaltos", main = "Cantidad de asaltos por mes durante el año 2015")
ggplot(delitos.x.mes, aes(x = Mes, y = n, group = 1)) +
geom_point() + geom_line() + theme_minimal() +
labs(y = "Cantidad de Asaltos", title = "Cantidad de asaltos por mes durante el año 2015")
mapa <- ggcr::get_map(prov = "San Jose",cant = "all",dist = "all")
ggplot(data = mapa, mapping = aes(x = long, y = lat)) +
geom_polygon(mapping = aes(group = group))+
coord_fixed(ratio = 1) +
theme_minimal()
library(ggcr)
mapa <- ggcr::get_map(prov = "San Jose",cant = "all",dist = "all")
ggplot(data = mapa, mapping = aes(x = long, y = lat)) +
geom_polygon(mapping = aes(group = group))+
coord_fixed(ratio = 1) +
theme_minimal()
mapa <- ggcr::get_map(prov = "San Jose",cant = "all",dist = "all")
ggplot(data = mapa, mapping = aes(x = long, y = lat)) +
geom_polygon(mapping = aes(group = group)) + coord_fixed(ratio = 1) +
theme_minimal()
mapa <- ggcr::get_map(prov = "San Jose",cant = "all",dist = "all")
ggplot(data = mapa, mapping = aes(x = long, y = lat)) +
geom_polygon(mapping = aes(group = group)) + coord_fixed(ratio = 2) +
theme_minimal()
mapa <- ggcr::get_map(prov = "San Jose",cant = "all",dist = "all")
ggplot(data = mapa, mapping = aes(x = long, y = lat)) +
geom_polygon(mapping = aes(group = group)) + coord_fixed(ratio = 3) +
theme_minimal()
mapa <- ggcr::get_map(prov = "San Jose",cant = "all",dist = "all")
ggplot(data = mapa, mapping = aes(x = long, y = lat)) +
geom_polygon(mapping = aes(group = group)) + coord_fixed(ratio = 1) +
theme_minimal()
ggplot(data = mapa, mapping = aes(x = long, y = lat)) +
geom_polygon(mapping = aes(group = group))+
coord_fixed(ratio = 1) +
theme_minimal()
mapa <- ggcr::get_map(prov = "San Jose",cant = "all",dist = "all")
ggplot(data = mapa, mapping = aes(x = long, y = lat)) +
geom_polygon(mapping = aes(group = group))+
coord_fixed(ratio = 1) +
theme_minimal()
mapa
mapa <- ggcr::get_map(prov = "San Jose",cant = "all",dist = "all")
ggplot(data = mapa, mapping = aes(x = long, y = lat)) +
geom_polygon(mapping = aes(group = group))+
coord_fixed(ratio = 1) +
theme_minimal()
datos <- read.table(file = "/Users/promidat05/Downloads/DatosClaseTarea/censo_inec_2011.csv", sep = ",", dec = ".", header = T)
datos <- read.table(file = "/Users/promidat05/Downloads/DatosClaseTarea/censo_inec_2011.csv", sep = ",", dec = ".", header = T)
datos <- read.table(file = "/Users/promidat05/Downloads/DatosClaseTarea/censo_inec_2011.csv", sep = ";", dec = ".", header = T)
censo_inec_2011 <- read.csv("~/Downloads/DatosClaseTarea/censo_inec_2011.csv")
View(censo_inec_2011)
read.csv
datos <- read.table(file = "/Users/promidat05/Downloads/DatosClaseTarea/censo_inec_2011.csv", sep = ",", dec = ".", quote = "\"", header = T)
datos
datos <- read.table(file = "/Users/promidat05/Downloads/DatosClaseTarea/censo_inec_2011.csv",
sep = ",", dec = ".", quote = "\"", header = T)
datos
datos$Canton
mapa <- read.table(file = "/Users/promidat05/Downloads/DatosClaseTarea/censo_inec_2011.csv",
sep = ",", dec = ".", quote = "\"", header = T)
ggplot(data = mapa, aes(x = long, y = lat))
mapa
mapa <- ggcr::get_map(prov = "San Jose",cant = "all",dist = "all")
ggplot(data = mapa, mapping = aes(x = long, y = lat)) +
geom_polygon(mapping = aes(group = group))+
coord_fixed(ratio = 1) +
theme_minimal()
datos <- read.table(file = "/Users/promidat05/Downloads/DatosClaseTarea/censo_inec_2011.csv",
sep = ",", dec = ".", quote = "\"", header = T)
mapa$group
datos$Poblacion_Total
ggplot(data = mapa, aes(x = long, y = lat)) +
geom_polygon(data = datos, mapping = aes(group = mapa$group, fill = Poblacion_Total),size = .2)
mapa$long
ggplot(data = mapa, aes(x = mapa$long, y = mapa$lat)) +
geom_polygon(data = datos, mapping = aes(group = mapa$group, fill = Poblacion_Total),size = .2)
datos$Canton
datos
datos
colnames(datos)
datos %>% filter(Provincia == "San Jose")
aux <- datos %>% filter(Provincia == "San Jose")
ggplot(data = mapa, aes(x = long, y = lat)) +
geom_polygon(data = aux, mapping = aes(group = mapa$group, fill = Poblacion_Total),size = .2)
ggplot(data = mapa, aes(x = mapa$long, y = mapa$lat)) +
geom_polygon(data = aux, mapping = aes(group = mapa$group, fill = Poblacion_Total),size = .2)
aux
aux <- datos %>% filter(Provincia == "San Jose") %>% filter(Canton == "San Jose")
aux
mapa$group
mapa
