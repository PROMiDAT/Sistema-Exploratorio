"0","suppressWarnings({suppressMessages({"
"0","  library(formula.tools)"
"0","  library(e1071)"
"0","  library(kknn)"
"0","  library(MASS)"
"0","  library(class)"
"0","  library(rpart) "
"0","  library(rpart.plot)"
"0","  library(randomForest)"
"0","  library(nnet)"
"0","  library(caret)"
"0","  library(ada)"
"0","  library(snow)"
"0","  library(doMC)"
"0","  library(knitr)"
"0","  library(car)"
"0","  library(forcats)"
"0","  library(ggplot2)"
"0","  library(dplyr)"
"0","  library(forcats)"
"0","  library(stringr)"
"0","  library(xgboost)"
"0","  library(mapproj)"
"0","  })"
"0","})"
"0","calcprecision<-function(M,N,k){"
"0","  res<-0 "
"0","  suppressWarnings(j<-match(N,colnames(M)))"
"0","  "
"0","  if(0==sum(M[k,])){"
"0","    res<-1"
"0","    }"
"0","  else if(mode(j)==""numeric""){"
"0","    res<-M[k,j]/sum(M[k,])"
"0","  }"
"0","  return(res)"
"0","}"
"0","modelo.xgb <- function(datos, variable.predecir){"
"0","  datos[] <- lapply(datos, as.numeric) "
"0","  datos <- xgb.DMatrix(data = data.matrix(datos[, colnames(datos) != variable.predecir]), label = data.matrix(datos$res_comite))"
"0","        "
"0","  parametros <- list(booster = ""gbtree"", objective = ""binary:logistic"", eta=0.3, "
"0","               gamma=0, max_depth=6, min_child_weight=1, subsample=1, colsample_bytree=1) "
"0","  "
"0","  modelo <- xgb.train (params = parametros, data = datos, nrounds = 79, verbose = 0, watchlist = list(train=datos), "
"0","                       print_every_n = 10, early_stop_round = 10, maximize = F , eval_metric = ""error"")"
"0","  return(modelo)"
"0","}"
"0","predict.xgb <- function(modelo, testing){"
"0","  testing[] <- lapply(testing, as.numeric)"
"0","  testing <- xgb.DMatrix(data = data.matrix(testing))"
"0","  prediccion <- predict(modelo, testing)"
"0","  return(prediccion)"
"0","}"
"0","plot.prediccion <- function(clases, labels, colores = c(""#1565C0"", ""#EF6C00"", ""#1565C0"", ""#EF6C00""), titulo = ""PredicciÃ³n por clase""){"
"0","  labels <- factor(labels,levels = labels, ordered = T)"
"0","  data <- data.frame(label = labels, value = clases * 100)"
"0","  ggplot(data, aes(label, value)) + "
"0","    geom_bar(stat = ""identity"", fill = colores) +"
"0","    geom_text(aes(label = paste0(""("",format(round(value, 2), nsmall = 2),""%)""), y = value), vjust = -0.5, size = 4) +"
"0","    theme_minimal() +"
"0","    ylim(0, 100) +"
"0","    labs(title = paste0(titulo),"
"0","         y = ""Cantidad de casos"","
"0","         x = ""Categorias"","
"0","         caption = ""Fuente de datos : Grupo Financiero Improsa"")"
"0","}"
"0","indices.general <- function(MC) {"
"0","  precision.global <- sum(diag(MC))/sum(MC)"
"0","  error.global <- 1 - precision.global"
"0","  precision.categoria <- diag(MC)/rowSums(MC)"
"0","  res <- list(matriz.confusion = MC, precision.global = precision.global, error.global = error.global, "
"0","              precision.categoria = precision.categoria)"
"0","  names(res) <- c(""MC"", ""precision"", ""Error"", ""Categoria"")"
"0","  return(res)"
"0","}"
"0","verificar.prediccion <- function(modelo, testing, variable.predecir){"
"0","  aux <- levels(variable.predecir)"
"0","  if(class(modelo)[1] == ""svm.formula""){"
"0","    prediccion <- predict(modelo, testing, probability = TRUE)"
"0","    prediccion2 <- predict(modelo, testing, probability = FALSE)"
"0","    nivel.predecir <- as.character(prediccion2[1])"
"0","    ifelse(attributes(prediccion)$probabilities[1, 1] >= 0.5, "
"0","           prediccion <- attributes(prediccion)$probabilities[, 1],"
"0","           prediccion <- attributes(prediccion)$probabilities[, 2])"
"0","    "
"0","  } else if(class(modelo)[1] == ""nnet.formula""){"
"0","    prediccion <- predict(modelo, testing, type='raw')"
"0","    prediccion2 <- predict(modelo, testing, type = ""class"")"
"0","    nivel.predecir <- as.character(prediccion2[1])"
"0","    ifelse(prediccion[1] >= 0.5, prediccion <- prediccion, prediccion <- 1 - prediccion)"
"0","    "
"0","  } else if(class(modelo)[1] == ""naiveBayes""){"
"0","    prediccion <- predict(modelo, testing, type='raw')"
"0","    prediccion2 <- predict(modelo, testing)"
"0","    nivel.predecir <- as.character(prediccion2[1])"
"0","    ifelse(prediccion[1, 1] >= 0.5, prediccion <- prediccion[, 1], prediccion <- prediccion[, 2])"
"0","    "
"0","  } else if(class(modelo)[1] == ""qda"" || class(modelo)[1] == ""lda"") {"
"0","    prediccion <- predict(modelo, testing)"
"0","    nivel.predecir <- as.character(prediccion$class[1])"
"0","    ifelse(prediccion$posterior[1, 1] >= 0.5, prediccion <- prediccion$posterior[, 1], prediccion <- prediccion$posterior[, 2])"
"0","    "
"0","  } else {"
"0","    prediccion <- predict(modelo, testing, type='prob')"
"0","    ifelse(class(modelo) == ""rpart"", prediccion2 <- predict(modelo, testing, type = ""class""), "
"0","           prediccion2 <- predict(modelo, testing))"
"0","    nivel.predecir <- as.character(prediccion2[1])"
"0","    ifelse(prediccion[1, 1] >= 0.5, prediccion <- prediccion[, 1], prediccion <- prediccion[, 2])"
"0","  }"
"0","  res <- list(nivel = nivel.predecir, prediccion = prediccion)"
"0","  names(res) <- c(""Nivel"", ""Prediccion"")"
"0","  return(res)"
"0","}"
"0","prediccion.corte <- function(modelo.nombre, data.total){"
"0","  pred.optimo <- 0"
"0","  n <- dim(data.total)[1]"
"0","  cant.rechaza <- length(data.total$res_comite[data.total$res_comite == ""RECHAZA""])"
"0","  cant.aprueba <- n - cant.rechaza"
"0","  for(i in 2:18) {"
"0","    errori <- 0"
"0","    aceptai <- 0"
"0","    rechazai <- 0"
"0","    prediccion.optima <- c()"
"0","    probabilidad <- c()"
"0","    for(k in 1:n) {    "
"0","      muestra <- k"
"0","      ttesting <- data.total[muestra,]"
"0","      real <- as.character(ttesting[, ""res_comite""])"
"0","      ttesting <- ttesting[, colnames(ttesting) != ""res_comite""]"
"0","      taprendizaje <- data.total[-muestra,]"
"0","      "
"0","      if(modelo.nombre == ""svm""){"
"0","        modelo <- svm(res_comite ~ descp_deud + cliente_cred + mora_cph + num_empl + anos_operacion + proc_judiciales + malas_ref + segmento, "
"0","                      data = taprendizaje,kernel = ""linear"", probability = TRUE)"
"0","        prediccion <- predict(modelo, ttesting, probability = TRUE)"
"0","        Score <- ifelse(attributes(prediccion)$probabilities[1] >= i*0.05, ""APRUEBA"", ""RECHAZA"")"
"0","        prediccion <- attributes(prediccion)$probabilities"
"0","        "
"0","      } else if(modelo.nombre == ""nnet""){"
"0","        modelo <- nnet(res_comite ~ ., data = taprendizaje, "
"0","                     size=15, rang=0.1, decay=5e-4, maxit=100, MaxNWts=50000, trace=FALSE)"
"0","        prediccion <- predict(modelo, ttesting, type='raw')"
"0","        Score <- ifelse(prediccion >= i*0.05, ""APRUEBA"", ""RECHAZA"")"
"0","        "
"0","      } else if(modelo.nombre == ""naiveBayes""){"
"0","        modelo <- naiveBayes(res_comite ~ cliente_cred + niv_cph + malas_ref + segmento, data=taprendizaje)"
"0","        prediccion <- predict(modelo, ttesting, type='raw')"
"0","        Score <- ifelse(prediccion[1] >= i*0.05, ""APRUEBA"", ""RECHAZA"")"
"0","      "
"0","      } else if(modelo.nombre == ""rpart""){"
"0","        modelo = rpart(res_comite ~ descp_deud + mora_cph + antig_cliente_bi + anos_operacion + proc_judiciales + segmento, data = taprendizaje)"
"0","        prediccion <- predict(modelo, ttesting, type='prob')"
"0","        Score <- ifelse(prediccion[1] >= i*0.05, ""APRUEBA"", ""RECHAZA"")"
"0","        "
"0","      } else if(modelo.nombre == ""forest""){"
"0","        modelo <- randomForest(res_comite ~ descp_deud + mora_cph + antig_cliente_bi + anos_operacion + proc_judiciales + segmento,"
"0","                               data = taprendizaje, ntree=500, mtry=6, importance=TRUE, replace=FALSE, na.action = na.roughfix)"
"0","        prediccion <- predict(modelo, ttesting, type='prob')"
"0","        Score <- ifelse(prediccion[1] >= i*0.05, ""APRUEBA"", ""RECHAZA"")"
"0","        "
"0","      } else if(modelo.nombre == ""ada""){"
"0","        modelo <- ada(res_comite ~ num_empl + antig_cliente_bi + proc_judiciales + malas_ref, "
"0","                    data = taprendizaje, iter=100, nu=1, type=""discrete"")"
"0","        prediccion <- predict(modelo, ttesting, type='prob')"
"0","        Score <- ifelse(prediccion[1] >= i*0.05, ""APRUEBA"", ""RECHAZA"")"
"0","        "
"0","      } else if(modelo.nombre == ""xgboost""){"
"0","        taprendizaje <- taprendizaje[, c(""res_comite"", ""descp_deud"", ""cliente_cred"", ""mora_cph"", ""num_empl"", "
"0","                        ""niv_cph"", ""antig_cliente_bi"", ""anos_operacion"", ""proc_judiciales"", ""malas_ref"", ""segmento"")]"
"0","        taprendizaje$res_comite <- as.numeric(ifelse(taprendizaje$res_comite == ""APRUEBA"", ""1"", ""0""))"
"0","        modelo <- modelo.xgb(taprendizaje, ""res_comite"")"
"0","        prediccion <- predict.xgb(modelo, ttesting)"
"0","        Score <- ifelse(prediccion >= i*0.05, ""APRUEBA"", ""RECHAZA"")"
"0","      }"
"0","      prediccion.optima <- c(prediccion.optima, Score)"
"0","      probabilidad <- c(probabilidad, prediccion)"
"0","      if(Score == real){"
"0","        ifelse(real == ""APRUEBA"", aceptai <- aceptai + 1, rechazai <- rechazai + 1)"
"0","      } else{"
"0","        errori <- errori + 1"
"0","      }"
"0","    }"
"0","    "
"0","    if((rechazai/cant.rechaza)+(aceptai/cant.aprueba) > pred.optimo){"
"0","      pred.optimo <- (rechazai/cant.rechaza)+(aceptai/cant.aprueba)"
"0","      res.prediccion <- prediccion.optima"
"0","      res.probabilidad <- probabilidad"
"0","      pred.corte <- i * 0.05"
"0","    }"
"0","  }"
"0","  res <- list(nivel = ""APRUEBA"", prediccion = factor(res.prediccion), corte = pred.corte, probs = res.probabilidad)"
"0","  names(res) <- c(""Nivel"", ""Prediccion"", ""Corte"", ""Probabilidad"")"
"0","  return(res)"
"0","}"
"0","plot.corte <- function(real, prediccion, probabilidad, corte, colores = c(""#EF5350"",""#42A5F5""), titulo = """") {"
"0","  pred.class <- prediccion"
"0","  sens <- data.frame(value = caret::sensitivity(pred.class, real))"
"0","  spec <- data.frame(value = caret::specificity(pred.class, real))"
"0","  "
"0","  data <- data.frame(probs = probabilidad, reference = pred.class)"
"0","  "
"0","  empty <- ggplot() + geom_point(aes(1, 1), colour = ""white"") + "
"0","    theme(plot.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(),"
"0","          panel.border = element_blank(), panel.background = element_blank(), axis.title.x = element_blank(),"
"0","          axis.title.y = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(),"
"0","          axis.ticks = element_blank())"
"0","  "
"0","  right.bar <- ggplot(spec) + "
"0","    geom_col(aes(y = value, x = as.factor(""sens""), fill = as.factor(""sens""))) + "
"0","    geom_text(aes(label = scales::percent(value), y = value,x = as.factor(""sens"")), vjust = -.5, size = 3,fontface = ""bold"") +"
"0","    theme_light() +"
"0","    scale_fill_manual(values = c(colores[2])) +"
"0","    labs(fill = """", x = """", y = """") +"
"0","    scale_y_continuous(labels = scales::percent, limit = c(0, 1), position = ""right"") +"
"0","    theme(legend.position = ""none"","
"0","          panel.border = element_blank(),"
"0","          panel.grid = element_blank(),"
"0","          axis.title.x=element_blank(),"
"0","          axis.text.x=element_blank(),"
"0","          axis.ticks.x=element_blank(),"
"0","          plot.margin = unit(c(0,0,-.1,0), ""cm""))"
"0","  "
"0","  left.bar <- ggplot(sens)+ "
"0","    geom_col(aes(y = value, x = as.factor(""sens""), fill = as.factor(""sens""))) + "
"0","    geom_text(aes(label = scales::percent(value), y = value,x = as.factor(""sens"")), vjust = -.5, size = 3,fontface = ""bold"") +"
"0","    theme_light() +"
"0","    scale_fill_manual(values = c(colores[1])) +"
"0","    labs(fill = """", x = """", y = """") +"
"0","    scale_y_continuous(labels = scales::percent,limit = c(0, 1)) +"
"0","    theme(legend.position = ""none"","
"0","          panel.border = element_blank(),"
"0","          panel.grid = element_blank(),"
"0","          axis.title.x=element_blank(),"
"0","          axis.text.x=element_blank(),"
"0","          axis.ticks.x=element_blank(),"
"0","          plot.margin = unit(c(0,0,-.1,0), ""cm""))"
"0","  "
"0","  central.plot <- ggplot(data) +"
"0","    geom_density(aes(x = probs, fill = reference), alpha = .8, linetype = 0) +"
"0","    geom_vline(aes(xintercept = corte), color=""black"", linetype=""dashed"", alpha = .5) +"
"0","    scale_y_discrete(expand = c(0,0)) +"
"0","    theme_light() +"
"0","    scale_fill_manual(values = c(colores), labels = levels(real)) +"
"0","    guides(fill = guide_legend(reverse=F)) +"
"0","    labs(fill = """", x = """", y = """") +"
"0","    ggtitle(titulo) + "
"0","    theme(legend.position = ""top"","
"0","          panel.border = element_blank(),"
"0","          panel.grid = element_blank(),"
"0","          plot.margin = unit(c(0,0,0,0), ""cm""))"
"0","  "
"0","  gridExtra::grid.arrange(left.bar, central.plot, right.bar, ncol = 3, nrow = 1, widths = c(1.5,9,1.5), heights = c(9))"
"0","}"
"0","plot.precision <- function(DF, colores, title = """", iteraciones = 10){"
"0","  plotMerge <- ggplot()"
"0","  maximo <- max(DF)"
"0","  for (i in 1:dim(DF)[2]) {"
"0","    plotMerge <- plotMerge + geom_line(aes_(y = as.name(colnames(DF)[i]), x = 1:dim(DF)[1], color = colnames(DF)[i]), size = 0.5, data = DF) + "
"0","      geom_point(aes_(y = as.name(colnames(DF)[i]), x = 1:iteraciones, color = colnames(DF)[i]), data = DF, size = 2)"
"0","  }"
"0","  plotMerge <- plotMerge + theme_bw() + ggtitle(title) + xlab(""IteraciÃ³n"") + ylab(""PrecisiÃ³n"")"
"0","  plotMerge <- plotMerge + scale_color_manual(""Metodo"", values=colores)"
"0","  plotMerge"
"0","}"
